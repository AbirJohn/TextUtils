{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextFrom.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextFrom","useState","Text","setText","style","Color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","aboutText","App","Setmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wLAAe,I,YCGA,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAGF,oBAAIF,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,wBAWF,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACE,uBAAOD,UAAU,mBAAmBM,QAAWP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BACpF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,yCC5BD,SAASC,EAASV,GAIjC,IA6CA,EAAwBW,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAII,OACI,qCACA,sBAAKZ,UAAW,YAAYa,MAAQ,CAACC,MAAmB,SAAbf,EAAME,KAAc,QAAQ,QAAvE,UACI,6BAAKF,EAAMgB,UACX,qBAAKf,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAegB,MAAQL,EAAMM,SAfvC,SAACC,GACvBN,EAAQM,EAAMC,OAAOH,QAckEH,MAAQ,CAACO,gBAA6B,UAAbrB,EAAME,KAAe,OAAO,QAAQa,MAAmB,SAAbf,EAAME,KAAc,OAAO,SAAYI,GAAG,QAAQgB,KAAK,QAErM,wBAAQrB,UAAU,wBAAwBM,QAxDjC,WACjBM,EAAQ,gCACR,IAAIU,EAAWX,EAAKY,cACpBX,EAAQU,IAqDA,kCACA,wBAAQtB,UAAU,uBAAuBM,QAjDhC,WAEjBM,EAAQ,gCACR,IAAIU,EAAWX,EAAKa,cACpBZ,EAAQU,IA6CA,kCACA,wBAAQtB,UAAU,uBAAuBM,QAzChC,WAEjBM,EAAQ,gCAERA,EADe,KAsCP,wBACA,wBAAQZ,UAAU,uBAAuBM,QAhC9B,WACnB,IAAIK,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKK,QA6B3B,0BAEJ,sBAAKhB,UAAW,iBAAhB,UACI,2DACA,8BAAIW,EAAKoB,MAAM,KAAKC,OAApB,SAAkCrB,EAAKqB,OAAvC,gBACA,8BAAI,KAAQrB,EAAKoB,MAAM,KAAKC,OAA5B,YACA,yCACA,4BAAIrB,UD7BhBb,EAAOmC,aAAe,CAClB9B,MAAO,iBACP+B,UAAU,SEGCC,MAxCf,WAEA,MAAwBzB,mBAAS,SAAjC,mBAAOT,EAAP,KAAamC,EAAb,KAmBE,OACE,qCAGA,cAACtC,EAAD,CAAQK,MAAQ,YAAaF,KAAOA,EAAQM,WArB3B,WAEL,UAATN,GACDmC,EAAQ,QAERX,SAASY,KAAKxB,MAAMO,gBAAkB,SAItCgB,EAAQ,SACRX,SAASY,KAAKxB,MAAMO,gBAAkB,YAYxC,qBAAKpB,UAAU,iBAAf,SAGA,cAACS,EAAD,CAAUM,QAAU,sBAAsBd,KAAOA,UC1BtCqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.e8202bf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">About</a>\r\n              </li>\r\n\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'Dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick = {props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\ntitle:  PropTypes.string.isRequired,\r\naboutText:  PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title hear',\r\n    aboutText:'About'\r\n\r\n};\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextFrom(props) {\r\n\r\n\r\n// that work in text convart In Uparcase\r\nconst handleUpClick =() =>{\r\n    setText(\"You have Click handleUpclick\");\r\n    let newText  = Text.toUpperCase();// that work in text convart In Uparcase vale;\r\n    setText(newText);\r\n\r\n}\r\n\r\n// that work in text convart In Lowecase\r\nconst handleloClick =() =>{\r\n\r\n    setText(\"You have Click handleloclick\");\r\n    let newText  = Text.toLowerCase();// that work in text convart In Lowecase vale;\r\n    setText(newText);\r\n    \r\n}\r\n\r\n\r\nconst handleClClick =() =>{\r\n\r\n    setText(\"You have Click handleClclick\");\r\n    let newText  = \"\"  // that work in text Clearing Text;\r\n    setText(newText);\r\n    \r\n}\r\n\r\n\r\n//that work  text To Clearing \r\nconst handleCopyClick =() =>{\r\n    var Text = document.getElementById(\"Mybox\");\r\n    Text.select();\r\n    navigator.clipboard.writeText(Text.value);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst handleonChange =(event)=>{\r\nsetText(event.target.value);\r\n\r\n}\r\n\r\n\r\nconst [Text, setText] = useState('Enter Text Hear');\r\n\r\n    // setText(\"new Text\");\r\n\r\n    return (\r\n        <>\r\n        <div className= \"container\" style ={{Color:props.mode==='dark'?'white':'gray'}}> \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value ={Text} onChange={handleonChange} style ={{backgroundColor:props.mode==='light'?'gray':'white',Color:props.mode==='dark'?'gray':'white'}}   id=\"Mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 \" onClick={handleUpClick} >Convart To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleloClick} >Convart To Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClClick} > ClearText</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick} > CopyText</button>\r\n        </div>\r\n        <div className =\"container my-3\" >\r\n            <h2>Counter in Word character</h2>\r\n            <p>{Text.split(\" \").length} word {Text.length} character</p>\r\n            <p>{0.008 * Text.split(\" \").length}Minute</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text}</p>\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextFrom from './components/TextFrom';\nimport About from './components/About';\nimport React, { useState } from 'react'\n\n\n\nfunction App() {\n\nconst [mode, Setmode] = useState('light');\n\n  const togglemode = () =>{\n\n    if(mode === 'light'){\n      Setmode('dark');\n      \n      document.body.style.backgroundColor = 'grey';\n    \n    \n    }else{\n      Setmode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n\n\n  }\n\n\n  return (\n    <>\n\n\n    <Navbar title = \"TextUtils\"  mode ={mode}   togglemode ={togglemode}  />\n    <div className=\"container my-3\">\n\n\n    <TextFrom heading = \"Enter the text hear\" mode ={mode}  />\n\n    {/* <About/> */}\n\n    </div>\n\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}